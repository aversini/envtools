'use strict';const _=require('lodash'),util=require('util'),moment=require('moment'),path=require('path'),log=require('fedtools-logs'),config=require('fedtools-config'),common=require('../common'),EnvtoolsBase=require('./base'),EnvtoolsVersion=function(){EnvtoolsBase.call(this)};util.inherits(EnvtoolsVersion,EnvtoolsBase),EnvtoolsVersion.prototype.name='EnvtoolsVersion',EnvtoolsVersion.prototype._initialize=function(){let a=!1,b=!1;EnvtoolsBase.prototype._initialize.call(this),this.currentVersion=this.packageJson.version;const c=this._getConfiguration();c&&c[common.ENVTOOLS.CFG_AUTOCHECK]===common.ON&&(a=!0),a&&c&&c.expiration?moment().isAfter(c.expiration)&&(b=!0):b=a,b&&require('child_process').spawn(process.execPath,[path.join(__dirname,'..','..','bin','check.js')],{detached:!0,stdio:'ignore'}).unref()},EnvtoolsVersion.prototype._getConfiguration=function(){return config.getKey('envtoolsversion')},EnvtoolsVersion.prototype.setAutoCheck=function(a){const b={};b[common.ENVTOOLS.CFG_AUTOCHECK]=a,config.setKey('envtoolsversion',_.extend(this._getConfiguration(),b),!0,!0)},EnvtoolsVersion.prototype.getAutoCheck=function(){const a=this._getConfiguration();return a?a[common.ENVTOOLS.CFG_AUTOCHECK]?a[common.ENVTOOLS.CFG_AUTOCHECK]:common.OFF:common.OFF},EnvtoolsVersion.prototype.printUpgradeIfAny=function(a){function b(a,b){return log.echo(),log.printMessagesInBox(a,b?b:common.LOG_COLORS.DEFAULT_BOX),log.echo(),!0}const c=this,d=[],e=245,f=this._getConfiguration()||{},g='There is no data available at this time.\nPlease check again later...',h=`Automatically check for update is disabled.\nYou can enable this option by typing ${log.strToColor(e,'envtools config')}\nand following the instructions at the prompt.`;let i;if(a&&!f)return b([g]);if(a&&f&&f[common.ENVTOOLS.CFG_AUTOCHECK]!==common.ON)return b([h]);if(f&&f.latest)require('semver').gt(f.latest,c.currentVersion)?(i='cyan',d.push(''),d.push('A new version of Envtools has been published!'),d.push(`Envtools ${log.strToColor('green',f.latest)} is now available - you have ${log.strToColor(e,c.currentVersion)}`),d.push(`Type ${log.strToColor(e,'npm install -g envtools')} to upgrade.`),d.push('')):a&&(i='green',d.push(''),d.push(`${'You are up-to-date!'} (${c.currentVersion})`),d.push(''));else if(a)return b([g]);return d.length&&(!f.alreadyDisplayed||a)?(config.setKey('envtoolsversion',_.extend(f,{alreadyDisplayed:!0}),!0,!0),b(d,i)):void 0},EnvtoolsVersion.prototype.printCurrentVersion=function(a,b){this.printUpgradeIfAny()||(log.echo(),log.printMessagesInBox(['',this.i18n.t('version.installed')+log.strToColor('green',this.currentVersion),''],common.LOG_COLORS.DEFAULT_BOX),log.echo()),b()},module.exports=function(){return EnvtoolsVersion._instance||new EnvtoolsVersion}();